"""
Script de verificaci√≥n de entorno Python.

Verifica que la versi√≥n de Python y las dependencias
sean compatibles con OpenSim 4.5.
"""

import sys

print("=" * 70)
print(" VERIFICACI√ìN DE ENTORNO PYTHON")
print("=" * 70)
print()

# ============================================================================
# VERIFICAR VERSI√ìN DE PYTHON
# ============================================================================
print("üêç 1. Verificando versi√≥n de Python...")
print(f"   Versi√≥n instalada: Python {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
print(f"   Ruta: {sys.executable}")
print()

major, minor = sys.version_info[:2]

if major == 3 and 8 <= minor <= 10:
    print("   ‚úÖ Versi√≥n PERFECTA para OpenSim 4.5")
    python_ok = True
elif major == 3 and minor == 11:
    print("   ‚ö†Ô∏è Python 3.11 puede funcionar, pero no es la recomendada")
    print("      Recomendaci√≥n: Usa Python 3.10.11")
    python_ok = True
elif major == 3 and minor >= 12:
    print("   ‚ùå Python 3.12+ NO es compatible con OpenSim 4.5")
    print("      ACCI√ìN REQUERIDA:")
    print("      1. Desinstala Python 3.12")
    print("      2. Instala Python 3.10.11 desde: https://python.org/downloads/release/python-31011/")
    python_ok = False
elif major == 3 and minor < 8:
    print("   ‚ùå Python 3.7 o menor es muy antiguo")
    print("      ACCI√ìN REQUERIDA: Instala Python 3.10.11")
    python_ok = False
else:
    print(f"   ‚ö†Ô∏è Versi√≥n no probada: Python {major}.{minor}")
    python_ok = False

print()

# ============================================================================
# VERIFICAR PAQUETES CORE
# ============================================================================
print("üì¶ 2. Verificando paquetes cient√≠ficos core...")

core_packages = [
    ('numpy', 'NumPy'),
    ('scipy', 'SciPy'),
    ('pandas', 'Pandas'),
    ('sklearn', 'Scikit-learn')
]

all_core_installed = True

for package_name, display_name in core_packages:
    try:
        mod = __import__(package_name)
        version = getattr(mod, '__version__', 'unknown')
        print(f"   ‚úÖ {display_name}: {version}")
    except ImportError:
        print(f"   ‚ùå {display_name}: NO instalado")
        all_core_installed = False

print()

# ============================================================================
# VERIFICAR PAQUETES DE INTERFAZ
# ============================================================================
print("üé® 3. Verificando paquetes de interfaz...")

ui_packages = [
    ('customtkinter', 'CustomTkinter'),
    ('PIL', 'Pillow'),
    ('matplotlib', 'Matplotlib')
]

all_ui_installed = True

for package_name, display_name in ui_packages:
    try:
        mod = __import__(package_name)
        version = getattr(mod, '__version__', 'unknown')
        print(f"   ‚úÖ {display_name}: {version}")
    except ImportError:
        print(f"   ‚ùå {display_name}: NO instalado")
        all_ui_installed = False

print()

# ============================================================================
# VERIFICAR PAQUETES DE DATOS
# ============================================================================
print("üìä 4. Verificando paquetes de manejo de datos...")

data_packages = [
    ('openpyxl', 'OpenPyXL (Excel)'),
    ('xlsxwriter', 'XlsxWriter'),
]

for package_name, display_name in data_packages:
    try:
        mod = __import__(package_name)
        version = getattr(mod, '__version__', 'unknown')
        print(f"   ‚úÖ {display_name}: {version}")
    except ImportError:
        print(f"   ‚ö†Ô∏è {display_name}: NO instalado (opcional)")

print()

# ============================================================================
# VERIFICAR OPENSIM (CR√çTICO)
# ============================================================================
print("ü¶¥ 5. Verificando OpenSim 4.5...")

opensim_installed = False
try:
    import opensim
    version = getattr(opensim, '__version__', 'unknown')
    print(f"   ‚úÖ OpenSim instalado: versi√≥n {version}")
    print(f"   ‚úÖ ¬°Excelente! An√°lisis IK/ID disponibles")
    opensim_installed = True
except ImportError:
    print("   ‚ùå OpenSim NO instalado")
    print()
    print("   IMPORTANTE: OpenSim es necesario para an√°lisis completo")
    print()
    print("   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê")
    print("   ‚îÇ  C√ìMO INSTALAR OPENSIM 4.5                          ‚îÇ")
    print("   ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§")
    print("   ‚îÇ  1. Descargar instalador oficial:                   ‚îÇ")
    print("   ‚îÇ     https://simtk.org/frs/?group_id=91              ‚îÇ")
    print("   ‚îÇ                                                      ‚îÇ")
    print("   ‚îÇ  2. Instalar OpenSim 4.5 (programa completo)        ‚îÇ")
    print("   ‚îÇ                                                      ‚îÇ")
    print("   ‚îÇ  3. Instalar paquete Python:                        ‚îÇ")
    print("   ‚îÇ     cd \"C:\\OpenSim 4.5\\sdk\\python\"              ‚îÇ")
    print("   ‚îÇ     python setup.py install                         ‚îÇ")
    print("   ‚îÇ                                                      ‚îÇ")
    print("   ‚îÇ  4. Verificar:                                      ‚îÇ")
    print("   ‚îÇ     python -c \"import opensim\"                     ‚îÇ")
    print("   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò")
    print()
    print("   SIN OPENSIM: El sistema funcionar√° con limitaciones")
    print("   ‚úì Adquisici√≥n de datos: S√ç")
    print("   ‚úì Procesamiento de se√±ales: S√ç")
    print("   ‚úó Cinem√°tica Inversa (IK): NO")
    print("   ‚úó Din√°mica Inversa (ID): NO")

print()

# ============================================================================
# VERIFICAR BLUETOOTH (OPCIONAL)
# ============================================================================
print("üì° 6. Verificando soporte Bluetooth (opcional)...")

try:
    import bleak
    version = getattr(bleak, '__version__', 'unknown')
    print(f"   ‚úÖ Bleak: {version}")
    print(f"   ‚úÖ Conexi√≥n con sensores IMU Xsens DOT disponible")
except ImportError:
    print("   ‚ö†Ô∏è Bleak NO instalado")
    print("      Sin Bleak: No puedes conectar sensores IMU en tiempo real")
    print("      Para instalar: pip install bleak")

print()

# ============================================================================
# RESUMEN Y RECOMENDACIONES
# ============================================================================
print("=" * 70)
print(" RESUMEN")
print("=" * 70)
print()

# Evaluar estado general
issues = []
warnings = []

if not python_ok:
    issues.append("Versi√≥n de Python incompatible")

if not all_core_installed:
    issues.append("Faltan paquetes cient√≠ficos core")

if not all_ui_installed:
    issues.append("Faltan paquetes de interfaz")

if not opensim_installed:
    warnings.append("OpenSim no instalado (funcionalidad limitada)")

# Mostrar resultado
if len(issues) == 0:
    print("‚úÖ ESTADO: LISTO PARA USAR")
    print()
    if len(warnings) > 0:
        print("‚ö†Ô∏è ADVERTENCIAS:")
        for warning in warnings:
            print(f"   ‚Ä¢ {warning}")
        print()
    print("üöÄ Puedes ejecutar el sistema con:")
    print("   python main.py")
else:
    print("‚ùå ESTADO: REQUIERE ATENCI√ìN")
    print()
    print("üîß PROBLEMAS DETECTADOS:")
    for issue in issues:
        print(f"   ‚Ä¢ {issue}")
    print()
    print("üìã ACCIONES REQUERIDAS:")
    print()

    if not python_ok:
        print("   1. INSTALAR PYTHON 3.10.11")
        print("      ‚Üí Descargar: https://python.org/downloads/release/python-31011/")
        print("      ‚Üí Marcar: 'Add Python to PATH'")
        print()

    if not all_core_installed or not all_ui_installed:
        print("   2. INSTALAR DEPENDENCIAS")
        print("      ‚Üí Ejecutar: pip install -r requirements.txt")
        print()

    if not opensim_installed:
        print("   3. INSTALAR OPENSIM 4.5 (OPCIONAL pero recomendado)")
        print("      ‚Üí Descargar instalador: https://simtk.org/frs/?group_id=91")
        print("      ‚Üí Seguir instrucciones en: PYTHON_VERSION.md")
        print()

print()
print("=" * 70)
print()

# Exit code
if len(issues) > 0:
    print("‚ö†Ô∏è Hay problemas que deben resolverse antes de usar el sistema.")
    sys.exit(1)
else:
    print("‚ú® El entorno est√° correctamente configurado.")
    sys.exit(0)
